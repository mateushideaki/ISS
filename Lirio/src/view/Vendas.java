/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControleCliente;
import controller.ControleProduto;
import controller.ControleVendaProduto;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.ListIterator;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import model.Cliente;
import model.Produto;
import util.ClienteTableModel;
import util.ProdutoTableModel;
import model.Venda;
import model.VendaProduto;
import util.VendaProdutoTableModel;

/**
 *
 * @author lucas
 */
public class Vendas extends javax.swing.JFrame {

    private Cliente cliente;
    private String clienteNome;
    private ControleCliente controleCli = new ControleCliente();
    private List<Cliente> listaClientes = controleCli.listarClientes("");
    private ClienteTableModel modelCliente = new ClienteTableModel(listaClientes);

    private String produtoNome;
    private ControleProduto controleProd = new ControleProduto();
    private List<Produto> listaProdutos = controleProd.listarProdutos("");
    private ProdutoTableModel modelProduto = new ProdutoTableModel(listaProdutos);

    private ArrayList<VendaProduto> listaVenda = new ArrayList<VendaProduto>();
    private ControleVendaProduto controleVP = new ControleVendaProduto();
    private VendaProdutoTableModel modelVP;
    private Venda venda = new Venda();

    /**
     * Creates new form Venda
     */
    public Vendas() {
        initComponents();
        tabelaClientes.setModel(modelCliente);
        tabelaProdutos.setModel(modelProduto);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        btnRealizarVenda = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProdutosEscolhidos = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnAddProduto = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        buscaCliente = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaClientes = new javax.swing.JTable();
        btnCadastrarCli = new javax.swing.JButton();
        btnConfirmaCli = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaProdutos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        buscaProduto = new javax.swing.JTextField();
        qtdProduto = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        qtdRemover = new javax.swing.JSpinner();
        btnRemoverProd = new javax.swing.JButton();
        totalTxt = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("VENDA");

        btnRealizarVenda.setText("REALIZAR VENDA");
        btnRealizarVenda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRealizarVendaActionPerformed(evt);
            }
        });

        btnCancelar.setText("CANCELAR VENDA");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        tabelaProdutosEscolhidos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabelaProdutosEscolhidos);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("TOTAL:");

        btnAddProduto.setText("ADD PRODUTO");
        btnAddProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProdutoActionPerformed(evt);
            }
        });

        jLabel3.setText("Cliente:");

        buscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaClienteActionPerformed(evt);
            }
        });
        buscaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscaClienteKeyReleased(evt);
            }
        });

        tabelaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabelaClientes);

        btnCadastrarCli.setText("CADASTRAR CLIENTE");
        btnCadastrarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarCliActionPerformed(evt);
            }
        });

        btnConfirmaCli.setText("CONFIRMAR");
        btnConfirmaCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmaCliActionPerformed(evt);
            }
        });

        tabelaProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tabelaProdutos);

        jLabel4.setText("Produto:");

        buscaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscaProdutoKeyReleased(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setText("ITENS DA VENDA:");

        btnRemoverProd.setText("REMOVER PRODUTO");
        btnRemoverProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverProdActionPerformed(evt);
            }
        });

        totalTxt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        totalTxt.setText("R$ 0,00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(241, 241, 241)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(buscaProduto))
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel2)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(totalTxt))
                                            .addComponent(btnRealizarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(buscaCliente)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(qtdRemover, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
                                    .addComponent(qtdProduto))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(btnRemoverProd))
                                    .addComponent(btnAddProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(25, 25, 25))
                                    .addComponent(btnConfirmaCli, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnCadastrarCli, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(buscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCadastrarCli)
                        .addGap(18, 18, 18)
                        .addComponent(btnConfirmaCli))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(buscaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAddProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(qtdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnRemoverProd, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(qtdRemover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(totalTxt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRealizarVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProdutoActionPerformed
        int linhaSelecionada = tabelaProdutos.getSelectedRow();
        VendaProduto vp = new VendaProduto();
        Produto produto = new Produto();
        ListIterator listIt = this.listaVenda.listIterator();
        int posicao = 0;
        
        if (linhaSelecionada >= 0) {                                            //verifica se algum produto foi selecionado
            if ((int) qtdProduto.getValue() > 0) {                              //verifica se a quantidade e positiva
                produto = this.modelProduto.get(linhaSelecionada);

                if ((int) qtdProduto.getValue() <= produto.getQntAtual()) {     //verifica se tem no estoque

                    vp.setProduto(produto);
                    vp.setVenda(this.venda);
                    vp.setQuantidade((int) qtdProduto.getValue());
                    vp.setCusto((int) qtdProduto.getValue() * produto.getPrecoVenda());
                    
                    while (listIt.hasNext()) {
                        posicao++;
                        VendaProduto vpIt = (VendaProduto) listIt.next();
                        if (vpIt.getProduto().getId() == produto.getId()) {
                            posicao--;
                            vp.setQuantidade(vp.getQuantidade() + vpIt.getQuantidade());
                            vp.setCusto(vp.getCusto() + vpIt.getCusto());
                            venda.setTotal(venda.getTotal() - vpIt.getCusto());
                            listIt.remove();
                            break;
                        }
                    }

                    produto.setQntAtual(produto.getQntAtual() - (int) qtdProduto.getValue());    //decrementa no estoque
                    controleProd.alterarProduto(produto);
                    
                    this.modelProduto = new ProdutoTableModel(controleProd.listarProdutos(""));
                    tabelaProdutos.setModel(this.modelProduto);
                    
                    this.listaVenda.add(posicao, vp);                                //add na lista

                    this.modelVP = new VendaProdutoTableModel(this.listaVenda);  //atualiza a tabela
                    tabelaProdutosEscolhidos.setModel(this.modelVP);
                    this.venda.setTotal(this.venda.getTotal() + vp.getCusto());  //atualiza o total
                    totalTxt.setText("" + this.venda.getTotal());

                } else {
                    JOptionPane.showMessageDialog(this, "So existem " + produto.getQntAtual() + " unidades disponiveis no estoque.", "Erro.", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "A quantidade do produto deve ser superior a zero.", "Erro.", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Produto.", "Erro: Nenhum Produto selecionado.", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddProdutoActionPerformed

    private void btnCadastrarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarCliActionPerformed
        new CadastroCliente().setVisible(true);
    }//GEN-LAST:event_btnCadastrarCliActionPerformed

    private void btnRemoverProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverProdActionPerformed
        int linhaSelecionada = tabelaProdutosEscolhidos.getSelectedRow();
        VendaProduto vp = new VendaProduto();
        ListIterator listIt = this.listaVenda.listIterator();
        Produto produto;
        int posicao = 0;           //posicao onde sera re-inserido o objeto na lista

        if (linhaSelecionada >= 0) {                                            //verifica se algum produto foi selecionado
            if ((int) qtdRemover.getValue() > 0) {                              //verifica se a quantidade e positiva
                vp = this.modelVP.get(linhaSelecionada);
                produto = vp.getProduto();

                while (listIt.hasNext()) {                      //remove o produto da lista
                    posicao++;
                    VendaProduto vpIt = (VendaProduto) listIt.next();
                    if (vpIt == vp) {
                        posicao--;
                        listIt.remove();
                        break;
                    }
                }

                if ((int) qtdRemover.getValue() < vp.getQuantidade()) {        //se for verdadeiro adiciona com a quantidade calculada
                    vp.setQuantidade(vp.getQuantidade() - (int) qtdRemover.getValue());
                    vp.setCusto(vp.getCusto() - (int) qtdRemover.getValue() * produto.getPrecoVenda());
                    listaVenda.add(posicao, vp);
                    produto.setQntAtual(produto.getQntAtual() + (int) qtdRemover.getValue()); //volta ao estoque
                    this.venda.setTotal(this.venda.getTotal() - vp.getProduto().getPrecoVenda() * (int) qtdRemover.getValue());
                } else {
                    produto.setQntAtual(produto.getQntAtual() + vp.getQuantidade());
                    this.venda.setTotal(this.venda.getTotal() - vp.getProduto().getPrecoVenda() * vp.getQuantidade());
                }

                controleProd.alterarProduto(produto);
                this.modelProduto = new ProdutoTableModel(this.controleProd.listarProdutos(""));
                tabelaProdutos.setModel(this.modelProduto);
                
                this.modelVP = new VendaProdutoTableModel(this.listaVenda);  //atualiza a tabela
                tabelaProdutosEscolhidos.setModel(this.modelVP);
                
                totalTxt.setText("" + this.venda.getTotal());

            } else {
                JOptionPane.showMessageDialog(this, "A quantidade a ser removida deve ser superior a zero.", "Erro.", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Produto.", "Erro: Nenhum Produto selecionado.", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverProdActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        new MenuInicial().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnRealizarVendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRealizarVendaActionPerformed
        new JanelaEscolhePagamentoVenda().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRealizarVendaActionPerformed

    private void buscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscaClienteActionPerformed

    private void buscaClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscaClienteKeyReleased
        this.clienteNome = buscaCliente.getText();
        this.listaClientes = controleCli.listarClientes(this.clienteNome);
        this.modelCliente = new ClienteTableModel(this.listaClientes);
        tabelaClientes.setModel(this.modelCliente);
    }//GEN-LAST:event_buscaClienteKeyReleased

    private void buscaProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscaProdutoKeyReleased
        this.produtoNome = buscaProduto.getText();
        this.listaProdutos = controleProd.listarProdutos(this.produtoNome);
        this.modelProduto = new ProdutoTableModel(this.listaProdutos);
        tabelaProdutos.setModel(this.modelProduto);
    }//GEN-LAST:event_buscaProdutoKeyReleased

    private void btnConfirmaCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmaCliActionPerformed
        int linhaSelecionada = tabelaClientes.getSelectedRow();

        if (linhaSelecionada >= 0) {
            this.cliente = this.modelCliente.get(linhaSelecionada);
            this.venda.setCliente(this.cliente);
            JOptionPane.showMessageDialog(this, "Cliente " + this.cliente.getNome() + " selecionado.", "Cliente selecionado.", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um cliente.", "Erro: Nenhum cliente selecionado.", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnConfirmaCliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProduto;
    private javax.swing.JButton btnCadastrarCli;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmaCli;
    private javax.swing.JButton btnRealizarVenda;
    private javax.swing.JButton btnRemoverProd;
    private javax.swing.JTextField buscaCliente;
    private javax.swing.JTextField buscaProduto;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner qtdProduto;
    private javax.swing.JSpinner qtdRemover;
    private javax.swing.JTable tabelaClientes;
    private javax.swing.JTable tabelaProdutos;
    private javax.swing.JTable tabelaProdutosEscolhidos;
    private javax.swing.JLabel totalTxt;
    // End of variables declaration//GEN-END:variables
}
