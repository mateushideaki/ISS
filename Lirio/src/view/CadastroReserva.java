/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.ControleCliente;
import controller.ControleReserva;
import controller.ControleReservaProduto;
import controller.ControleProduto;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.ListIterator;
import java.util.List;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.YES_OPTION;
import model.Cliente;
import model.Produto;
import model.Reserva;
import model.ReservaProduto;
import util.ClienteTableModel;
import util.ReservaProdutoTableModel;
import util.ProdutoTableModel;
/**
 *
 * @author Danilo
 */
public class CadastroReserva extends javax.swing.JFrame {
    
    private Cliente cliente;
    private String clienteNome;
    private ControleCliente controleCli = new ControleCliente();
    private List<Cliente> listaCli = controleCli.listarClientes("");
    private ClienteTableModel modelCliente = new ClienteTableModel(listaCli);
    private Cliente c = new Cliente();
    
    private String produtoNome;
    private ControleProduto controleProd = new ControleProduto();
    private List<Produto> listaProd = controleProd.listarProdutos("");

    private ProdutoTableModel modelProduto = new ProdutoTableModel(listaProd);
    private Produto p = new Produto();
    
    private ArrayList<ReservaProduto> listaReserva = new ArrayList<ReservaProduto>();
    private ControleReservaProduto controleRP = new ControleReservaProduto();
    private ReservaProdutoTableModel modelRP;
    
    private ControleReserva controleReserva = new ControleReserva();
    private Reserva reserva = new Reserva();
    
    public CadastroReserva() {
        initComponents();
        tabelaCliente.setModel(modelCliente);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        buscaCliente = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabelaCliente = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaProduto = new javax.swing.JTable();
        AdicionarProd = new javax.swing.JButton();
        qtdProduto = new javax.swing.JSpinner();
        Cancelar = new javax.swing.JButton();
        totalTxt = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        qtdRemover = new javax.swing.JSpinner();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaProdutosReservados = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        RemoverProd = new javax.swing.JButton();
        RegistrarPedido = new javax.swing.JButton();
        buscaProduto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        ConfirmarCli = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("CADASTRAR RESERVA");

        jLabel4.setText("Cliente:");

        buscaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaClienteActionPerformed(evt);
            }
        });
        buscaCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscaClienteKeyReleased(evt);
            }
        });

        tabelaCliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(tabelaCliente);

        tabelaProduto.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tabelaProduto);

        AdicionarProd.setText("ADICIONAR PRODUTO");
        AdicionarProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionarProdActionPerformed(evt);
            }
        });

        Cancelar.setText("CANCELAR RESERVA");
        Cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelarActionPerformed(evt);
            }
        });

        totalTxt.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        totalTxt.setText("R$ 0,00");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel7.setText("LISTA DE PRODUTOS DA RESERVA");

        tabelaProdutosReservados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabelaProdutosReservados);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("TOTAL:");

        RemoverProd.setText("REMOVER PRODUTO");
        RemoverProd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoverProdActionPerformed(evt);
            }
        });

        RegistrarPedido.setText("REGISTRAR PEDIDO");
        RegistrarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegistrarPedidoActionPerformed(evt);
            }
        });

        buscaProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscaProdutoActionPerformed(evt);
            }
        });
        buscaProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscaProdutoKeyReleased(evt);
            }
        });

        jLabel6.setText("Produto:");

        ConfirmarCli.setText("CONFIRMAR CLIENTE");
        ConfirmarCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmarCliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(279, 279, 279)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buscaCliente))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 540, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(buscaProduto))
                            .addComponent(jScrollPane1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(qtdRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(RemoverProd, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(qtdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(ConfirmarCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(AdicionarProd, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))))))
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(totalTxt)
                                .addGap(34, 34, 34)
                                .addComponent(RegistrarPedido)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(101, 101, 101)
                .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(buscaCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(ConfirmarCli)))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscaProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(qtdProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AdicionarProd, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(63, 63, 63))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(qtdRemover, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RemoverProd, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(94, 94, 94)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(RegistrarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(totalTxt)
                            .addComponent(jLabel2))))
                .addGap(30, 30, 30))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buscaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscaClienteActionPerformed

    private void buscaClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscaClienteKeyReleased
        this.clienteNome = buscaCliente.getText();
        this.listaCli = controleCli.listarClientes(this.clienteNome);
        this.modelCliente = new ClienteTableModel(this.listaCli);
        tabelaCliente.setModel(this.modelCliente);
    }//GEN-LAST:event_buscaClienteKeyReleased

    private void AdicionarProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarProdActionPerformed
        int linhaSelecionada = tabelaProduto.getSelectedRow();
        ReservaProduto rp = new ReservaProduto();
        Produto produto = new Produto();
        ListIterator listIt = this.listaReserva.listIterator();
        int posicao = 0;

        if (linhaSelecionada >= 0) {
            if (((int) qtdProduto.getValue() > 0)){
                produto = this.modelProduto.get(linhaSelecionada);
                if((int) qtdProduto.getValue() <= produto.getQntAtual()){
                    rp.setProduto(produto);
                    rp.setReserva(this.reserva);
                    rp.setQuantidade((int) qtdProduto.getValue());
                    rp.setPreco((int) qtdProduto.getValue() * produto.getPrecoVenda());
                    produto.setQntAtual(produto.getQntAtual() - rp.getQuantidade());
                    while (listIt.hasNext()) {
                        posicao++;
                        ReservaProduto rpIt = (ReservaProduto) listIt.next();
                        if (rpIt.getProduto().getId() == produto.getId()) {
                            posicao--;
                            rp.setQuantidade(rp.getQuantidade() + rpIt.getQuantidade());
                            rp.setPreco(rp.getPreco() + rpIt.getPreco());
                            reserva.setPreco(reserva.getPreco() - rpIt.getPreco());
                            listIt.remove();
                            break;
                        }
                    }
                
                    this.listaReserva.add(posicao, rp);
                    this.modelRP = new ReservaProdutoTableModel(this.listaReserva);
                    tabelaProdutosReservados.setModel(this.modelRP);
                    this.reserva.setPreco(this.reserva.getPreco() + rp.getPreco());
                    totalTxt.setText("" + this.reserva.getPreco());
                    tabelaProduto.repaint();
                }
                else {
                JOptionPane.showMessageDialog(this, "A quantidade do produto selecionados é maior que a a quantidade em estoque.", "Erro.", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "A quantidade do produto deve ser superior a zero.", "Erro.", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Produto.", "Erro: Nenhum Produto selecionado.", JOptionPane.ERROR_MESSAGE);
        }
        qtdProduto.setValue(0);
    }//GEN-LAST:event_AdicionarProdActionPerformed

    private void CancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelarActionPerformed
        new Reservass().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_CancelarActionPerformed

    private void RemoverProdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoverProdActionPerformed
        int linhaSelecionada = tabelaProdutosReservados.getSelectedRow();
        ReservaProduto rp = new ReservaProduto();
        ListIterator listIt = this.listaReserva.listIterator();
        Produto produto = new Produto();
        int posicao = 0;

        if (linhaSelecionada >= 0) { 
            if ((int) qtdRemover.getValue() > 0) {
                    rp = this.modelRP.get(linhaSelecionada);
                if ((int) qtdRemover.getValue() <= rp.getQuantidade()) {
                    produto = rp.getProduto();
                    String cliente = this.reserva.getCliente().getNome();
                    String nomeProd = produto.getNome();
                    rp.setProduto(produto);
                    produto.setQntAtual(produto.getQntAtual()+(int) qtdRemover.getValue());
                    while (listIt.hasNext()) {
                        posicao++;
                        ReservaProduto rpIt = (ReservaProduto) listIt.next();
                        if (rpIt == rp) {
                            posicao--;
                            listIt.remove();
                            break;
                        }
                    }

                    if ((int) qtdRemover.getValue() < rp.getQuantidade()) {
                        rp.setQuantidade(rp.getQuantidade() - (int) qtdRemover.getValue());
                        rp.setPreco(rp.getPreco() - (int) qtdRemover.getValue() * produto.getPrecoVenda());
                        listaReserva.add(posicao, rp);
                        this.reserva.setPreco(this.reserva.getPreco() - produto.getPrecoVenda() * (int) qtdRemover.getValue());
                    } else {
                        this.reserva.setPreco(this.reserva.getPreco() - produto.getPrecoVenda() * rp.getQuantidade());
                    }

                    this.modelRP = new ReservaProdutoTableModel(this.listaReserva);  //atualiza a tabela
                    tabelaProdutosReservados.setModel(this.modelRP);

                    totalTxt.setText("" + this.reserva.getPreco());
                    tabelaProduto.repaint();
                }
                else{
                    JOptionPane.showMessageDialog(this, "A quantidade a ser removida é invalida.", "Erro.", JOptionPane.ERROR_MESSAGE);
                }
            } else {
                JOptionPane.showMessageDialog(this, "A quantidade a ser removida deve ser superior a zero.", "Erro.", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Produto.", "Erro: Nenhum Produto selecionado.", JOptionPane.ERROR_MESSAGE);
        }
        qtdRemover.setValue(0);
    }//GEN-LAST:event_RemoverProdActionPerformed

    private void RegistrarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegistrarPedidoActionPerformed
        if (this.reserva.getPreco() <= 0){
            JOptionPane.showMessageDialog(this, "Reserva " + this.reserva.getId() + " não possui preço. Por isso não será cadastrada.", "Compra não cadastrada.", JOptionPane.INFORMATION_MESSAGE);
            new Reservass().setVisible(true);
            this.dispose();
        }else{
            int opcao = JOptionPane.showConfirmDialog(this, "Voce tem certeza que deseja cadastrar esta reserva?", "Confirmar Reserva.", JOptionPane.YES_NO_OPTION);
            if (opcao == YES_OPTION) {
                Date d = new Date();
                Calendar cal = new GregorianCalendar();
                cal.setTime(d);
                this.reserva.setDataReserva(d);
                this.controleReserva.cadastrarReserva(this.reserva);

                controleRP.cadastrarRP(listaReserva);
                new Reservass().setVisible(true);
                this.dispose();
            }
        }

    }//GEN-LAST:event_RegistrarPedidoActionPerformed

    private void buscaProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscaProdutoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buscaProdutoActionPerformed

    private void buscaProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscaProdutoKeyReleased
        this.produtoNome = buscaProduto.getText();
        this.listaProd = controleProd.listarProdutos(this.produtoNome);
        this.modelProduto = new ProdutoTableModel(this.listaProd);
        tabelaProduto.setModel(this.modelProduto);
    }//GEN-LAST:event_buscaProdutoKeyReleased

    private void ConfirmarCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmarCliActionPerformed
        int linhaSelecionada = tabelaCliente.getSelectedRow();
        Cliente cliente = new Cliente();

        if (linhaSelecionada >= 0) {
            String nome = (String) tabelaCliente.getValueAt(linhaSelecionada, 1);
            this.clienteNome = nome;
            this.cliente = this.modelCliente.get(linhaSelecionada);
            this.reserva.setCliente(this.cliente);
            tabelaProduto.setModel(modelProduto);
            JOptionPane.showMessageDialog(this, "Cliente " + this.cliente.getNome() + " selecionado.", "Cliente selecionado.", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Cliente.", "Erro: Nenhum cliente selecionado.", JOptionPane.ERROR_MESSAGE);
        }       
    }//GEN-LAST:event_ConfirmarCliActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroReserva.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdicionarProd;
    private javax.swing.JButton Cancelar;
    private javax.swing.JButton ConfirmarCli;
    private javax.swing.JButton RegistrarPedido;
    private javax.swing.JButton RemoverProd;
    private javax.swing.JTextField buscaCliente;
    private javax.swing.JTextField buscaProduto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner qtdProduto;
    private javax.swing.JSpinner qtdRemover;
    private javax.swing.JTable tabelaCliente;
    private javax.swing.JTable tabelaProduto;
    private javax.swing.JTable tabelaProdutosReservados;
    private javax.swing.JLabel totalTxt;
    // End of variables declaration//GEN-END:variables
}
